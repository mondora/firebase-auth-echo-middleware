run:
  issues-exit-code: 0

linters:
  disable-all: true
  enable:
    - deadcode # Finds unused code
    #- golint # Golint differs from gofmt. Gofmt reformats Go source code, whereas golint prints out style mistakes
    - revive
    - gofmt # Gofmt checks whether code was gofmt-ed. By default this tool runs with -s option to check for code simplification
    - gosimple # Linter for Go source code that specializes in simplifying a code
    - govet # Vet examines Go source code and reports suspicious constructs, such as Printf calls whose arguments do not align with the format string
    - errcheck # Errcheck is a program for checking for unchecked errors in go programs. These unchecked errors can be critical bugs in some cases
    - ineffassign # Detects when assignments to existing variables are not used
    #- lll # Reports long lines
    - staticcheck # Staticcheck is a go vet on steroids, applying a ton of static analysis checks
    - structcheck # Finds an unused struct fields
    - typecheck # Like the front-end of a Go compiler, parses and type-checks Go code
    - unconvert # Remove unnecessary type conversions
    - unparam # Reports unused function parameters
    - unused # Checks Go code for unused constants, variables, functions and types
    - varcheck # Finds unused global variables and constants
    #- interfacer # Linter that suggests narrower interface types
    - dupl # Tool for code clone detection
    - goconst # Finds repeated strings that could be replaced by a constant
    - gocyclo # Computes and checks the cyclomatic complexity of functions
    #- maligned # Tool to detect Go structs that would take less memory if their fields were sorted
    - depguard # Go linter that checks if package imports are in a list of acceptable packages
    - misspell # Finds commonly misspelled English words in comments
    - nakedret # Finds naked returns in functions greater than a specified function length
    - prealloc # Finds slice declarations that could potentially be preallocated
    #- scopelint # Scopelint checks for unpinned variables in go programs
    - exportloopref
    - gocritic # The most opinionated Go source code linter
    - gochecknoinits # Checks that no init functions are present in Go code
    - gochecknoglobals # Checks that no globals are present in Go code
    - gosec # Inspects source code for security problems
    - ifshort
    - makezero
    - nilerr
    - nlreturn
    - noctx
    - nolintlint
    - predeclared
    - promlinter
    - rowserrcheck
    - sqlclosecheck
    - stylecheck
    - thelper
    - whitespace
    - asciicheck
    - bodyclose
    - depguard
    - dogsled
    - durationcheck
    - errorlint
    - exportloopref
    - forbidigo
    - forcetypeassert
    #- wsl
    #- nestif
    ##- cyclop
    ##- gocognit

linters-settings:
  govet:
    check-shadowing: true
      #enable:
    #- fieldalignment
    enable-all: false
  cyclop:
    # the maximal code complexity to report
    max-complexity: 10
    # the maximal average package complexity. If it's higher than 0.0 (float) the check is enabled (default 0.0)
    package-average: 0.0
    # should ignore tests (default false)
    skip-tests: false
  gocognit:
    # minimal code complexity to report, 30 by default (but we recommend 10-20)
    min-complexity: 10
  nestif:
    # minimal complexity of if statements to report, 5 by default
    min-complexity: 5
